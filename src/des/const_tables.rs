//! DES算法使用的常量表  
//! 输入字节:    11111111  11111111  11111111 ..... 11111111
//! 字节索引:    0          1         2       .....  8
//! 算法每位编号: 01234567  .....                    57 58 59 60...

pub(super) const DES_BLOCK_SIZE: usize = 8;

/// 初始置换IP  
// pub(super) const DES_IP: [u8; 64] = [
//     58, 50, 42, 34, 26, 18, 10, 2,
//     60, 52, 44, 36, 28, 20, 12, 4,
//     62, 54, 46, 38, 30, 22, 14, 6,
//     64, 56, 48, 40, 32, 24, 16, 8,
//     57, 49, 41, 33, 25, 17, 9, 1,
//     59, 51, 43, 35, 27, 19, 11, 3,
//     61, 53, 45, 37, 29, 21, 13, 5,
//     63, 55, 47, 39, 31, 23, 15, 7,
// ];
pub(super) const DES_IP: [u8; 64] = [6, 14, 22, 30, 38, 46, 54, 62, 4, 12, 20, 28, 36, 44, 52, 60, 2, 10, 18, 26, 34, 42, 50, 58, 0, 8, 16, 24, 32, 40, 48, 56, 7, 15, 23, 31, 39, 47, 55, 63, 5, 13, 21, 29, 37, 45, 53, 61, 3, 11, 19, 27, 35, 43, 51, 59, 1, 9, 17, 25, 33, 41, 49, 57];

/// 逆初始置换IIP  
// pub(super) const DES_IIP: [u8; 64] = [
//     40, 8, 48, 16, 56, 24, 64, 32,
//     39, 7, 47, 15, 55, 23, 63, 31,
//     38, 6, 46, 14, 54, 22, 62, 30,
//     37, 5, 45, 13, 53, 21, 61, 29,
//     36, 4, 44, 12, 52, 20, 60, 28,
//     35, 3, 43, 11, 51, 19, 59, 27,
//     34, 2, 42, 10, 50, 18, 58, 26,
//     33, 1, 41, 9, 49, 17, 57, 25,
// ];
pub(super) const DES_IIP: [u8; 64] = [24, 56, 16, 48, 8, 40, 0, 32, 25, 57, 17, 49, 9, 41, 1, 33, 26, 58, 18, 50, 10, 42, 2, 34, 27, 59, 19, 51, 11, 43, 3, 35, 28, 60, 20, 52, 12, 44, 4, 36, 29, 61, 21, 53, 13, 45, 5, 37, 30, 62, 22, 54, 14, 46, 6, 38, 31, 63, 23, 55, 15, 47, 7, 39];

/// feistel函数使用的相关映射表  
/// 32位长度数据映射到48位长数据的位映射表  
// pub(super) const DES_E: [u8; 48] = [
//     32, 1, 2, 3, 4, 5,
//     4, 5, 6, 7, 8, 9,
//     8, 9, 10, 11, 12, 13,
//     12, 13, 14, 15, 16, 17,
//     16, 17, 18, 19, 20, 21,
//     20, 21, 22, 23, 24, 25,
//     24, 25, 26, 27, 28, 29,
//     28, 29, 30, 31, 32, 1,
// ];
pub(super) const DES_E: [u8; 48] = [3, 4, 3, 4, 5, 6, 7, 24, 13, 14, 15, 0, 15, 0, 1, 2, 23, 8, 9, 10, 11, 12, 11, 12, 19, 20, 19, 20, 21, 22, 23, 8, 29, 30, 31, 16, 31, 16, 17, 18, 7, 24, 25, 26, 27, 28, 27, 28];

/// 48位长数据映射到32位长数据的映射表, Si将第i个6位数据映射到4位长数据  
pub(super) const DES_S: [[u8; 64]; 8] = [[
    14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7,
    0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8,
    4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0,
    15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13,
],[
    15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10,
    3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5,
    0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15,
    13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9,
],[
    10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8,
    13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1,
    13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7,
    1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12,
],[
    7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15,
    13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9,
    10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4,
    3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14,
],[
    2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9,
    14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6,
    4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14,
    11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3,
],[
    12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11,
    10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8,
    9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6,
    4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13,
],[
    4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1,
    13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6,
    1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2,
    6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12,
],[
    13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7,
    1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2,
    7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8,
    2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11,
]];

/// feistel使用的置换函数  
// pub(super) const DES_P: [u8; 32] = [
//     16, 7, 20, 21,
//     29, 12, 28, 17,
//     1, 15, 23, 26,
//     5, 18, 31, 10,
//     2, 8, 24, 14,
//     32, 27, 3, 9,
//     19, 13, 30, 6,
//     22, 11, 4, 25,
// ];
pub(super) const DES_P: [u8; 32] = [23, 28, 12, 27, 19, 20, 1, 8, 14, 25, 22, 3, 30, 17, 9, 7, 15, 5, 29, 24, 10, 16, 0, 6, 31, 4, 13, 18, 2, 26, 11, 21];

// const DES_PC1_C: [u8; 28] = [
//     57, 49, 41, 33, 25, 17, 9,
//     1, 58, 50, 42, 34, 26, 18,
//     10, 2, 59, 51, 43, 35, 27,
//     19, 11, 3, 60, 52, 44, 36,
// ];
//
// const DES_PC1_D: [u8; 28] = [
//     63, 55, 47, 39, 31, 23, 15,
//     7, 62, 54, 46, 38, 30, 22,
//     14, 6, 61, 53, 45, 37, 29,
//     21, 13, 5, 28, 20, 12, 4,
// ];
// pub(super) const DES_PC1: [u8; 56] = [
//     63, 55, 47, 39, 31, 23, 15,
//     7, 62, 54, 46, 38, 30, 22,
//     14, 6, 61, 53, 45, 37, 29,
//     21, 13, 5, 28, 20, 12, 4,
//     57, 49, 41, 33, 25, 17, 9,
//     1, 58, 50, 42, 34, 26, 18,
//     10, 2, 59, 51, 43, 35, 27,
//     19, 11, 3, 60, 52, 44, 36,
// ];
pub(super) const DES_PC1: [u8; 56] = [
    7, 15, 23, 31, 39, 47, 55, 63,
    6, 14, 22, 30, 38, 46, 54, 62,
    5, 13, 21, 29, 37, 45, 53, 61,
    33, 41, 49, 57, 36, 44, 52, 60,
    34, 42, 50, 58, 1, 9, 17, 25,
    35, 43, 51, 59, 2, 10, 18, 26,
    4, 12, 20, 28, 3, 11, 19, 27,
];

// pub(super) const DES_PC2: [u8; 48] = [
//     14, 17, 11, 24, 1, 5,
//     3, 28, 15, 6, 21, 10,
//     23, 19, 12, 4, 26, 8,
//     16, 7, 27, 20, 13, 2,
//     41, 52, 31, 37, 47, 55,
//     30, 40, 51, 45, 33, 48,
//     44, 49, 39, 56, 34, 53,
//     46, 42, 50, 36, 29, 32,
// ];
pub(super) const DES_PC2: [u8; 48] = [28, 5, 3, 7, 16, 13, 23, 10, 4, 12, 21, 17, 14, 19, 2, 9, 6, 11, 20, 29, 1, 8, 0, 30, 32, 26, 49, 41, 35, 25, 52, 47, 48, 33, 55, 44, 40, 39, 43, 53, 24, 27, 36, 54, 46, 42, 51, 38];

/// 每轮密钥计算的左移位数  
pub(super) const DES_LS: [u8; 16] = [
    1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1,
];
